# coding: utf-8

"""
    RCSB RESTful API

    Provides programmatic access to information and annotations stored in the Protein Data Bank. <br>Models are generated from JSON schema version: <b>1.40.0</b>. <br>API services deployed on: Sun, 2 Apr 2023 21:44:46 -0700  # noqa: E501

    OpenAPI spec version: 1.40.0
    Contact: info@rcsb.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CoreChemComp(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'chem_comp': 'ChemComp',
        'pdbx_chem_comp_audit': 'list[PdbxChemCompAudit]',
        'pdbx_chem_comp_descriptor': 'list[PdbxChemCompDescriptor]',
        'pdbx_chem_comp_feature': 'list[PdbxChemCompFeature]',
        'pdbx_chem_comp_identifier': 'list[PdbxChemCompIdentifier]',
        'pdbx_family_prd_audit': 'list[PdbxFamilyPrdAudit]',
        'pdbx_prd_audit': 'list[PdbxPrdAudit]',
        'pdbx_reference_entity_list': 'list[PdbxReferenceEntityList]',
        'pdbx_reference_entity_poly': 'list[PdbxReferenceEntityPoly]',
        'pdbx_reference_entity_poly_link': 'list[PdbxReferenceEntityPolyLink]',
        'pdbx_reference_entity_poly_seq': 'list[PdbxReferenceEntityPolySeq]',
        'pdbx_reference_entity_sequence': 'list[PdbxReferenceEntitySequence]',
        'pdbx_reference_entity_src_nat': 'list[PdbxReferenceEntitySrcNat]',
        'pdbx_reference_molecule': 'PdbxReferenceMolecule',
        'pdbx_reference_molecule_annotation': 'list[PdbxReferenceMoleculeAnnotation]',
        'pdbx_reference_molecule_details': 'list[PdbxReferenceMoleculeDetails]',
        'pdbx_reference_molecule_family': 'PdbxReferenceMoleculeFamily',
        'pdbx_reference_molecule_features': 'list[PdbxReferenceMoleculeFeatures]',
        'pdbx_reference_molecule_list': 'list[PdbxReferenceMoleculeList]',
        'pdbx_reference_molecule_related_structures': 'list[PdbxReferenceMoleculeRelatedStructures]',
        'pdbx_reference_molecule_synonyms': 'list[PdbxReferenceMoleculeSynonyms]',
        'rcsb_bird_citation': 'list[RcsbBirdCitation]',
        'rcsb_chem_comp_annotation': 'list[RcsbChemCompAnnotation]',
        'rcsb_chem_comp_container_identifiers': 'RcsbChemCompContainerIdentifiers',
        'rcsb_chem_comp_descriptor': 'RcsbChemCompDescriptor',
        'rcsb_chem_comp_info': 'RcsbChemCompInfo',
        'rcsb_chem_comp_related': 'list[RcsbChemCompRelated]',
        'rcsb_chem_comp_synonyms': 'list[RcsbChemCompSynonyms]',
        'rcsb_chem_comp_target': 'list[RcsbChemCompTarget]',
        'rcsb_schema_container_identifiers': 'list[RcsbSchemaContainerIdentifiers]',
        'rcsb_id': 'str'
    }

    attribute_map = {
        'chem_comp': 'chem_comp',
        'pdbx_chem_comp_audit': 'pdbx_chem_comp_audit',
        'pdbx_chem_comp_descriptor': 'pdbx_chem_comp_descriptor',
        'pdbx_chem_comp_feature': 'pdbx_chem_comp_feature',
        'pdbx_chem_comp_identifier': 'pdbx_chem_comp_identifier',
        'pdbx_family_prd_audit': 'pdbx_family_prd_audit',
        'pdbx_prd_audit': 'pdbx_prd_audit',
        'pdbx_reference_entity_list': 'pdbx_reference_entity_list',
        'pdbx_reference_entity_poly': 'pdbx_reference_entity_poly',
        'pdbx_reference_entity_poly_link': 'pdbx_reference_entity_poly_link',
        'pdbx_reference_entity_poly_seq': 'pdbx_reference_entity_poly_seq',
        'pdbx_reference_entity_sequence': 'pdbx_reference_entity_sequence',
        'pdbx_reference_entity_src_nat': 'pdbx_reference_entity_src_nat',
        'pdbx_reference_molecule': 'pdbx_reference_molecule',
        'pdbx_reference_molecule_annotation': 'pdbx_reference_molecule_annotation',
        'pdbx_reference_molecule_details': 'pdbx_reference_molecule_details',
        'pdbx_reference_molecule_family': 'pdbx_reference_molecule_family',
        'pdbx_reference_molecule_features': 'pdbx_reference_molecule_features',
        'pdbx_reference_molecule_list': 'pdbx_reference_molecule_list',
        'pdbx_reference_molecule_related_structures': 'pdbx_reference_molecule_related_structures',
        'pdbx_reference_molecule_synonyms': 'pdbx_reference_molecule_synonyms',
        'rcsb_bird_citation': 'rcsb_bird_citation',
        'rcsb_chem_comp_annotation': 'rcsb_chem_comp_annotation',
        'rcsb_chem_comp_container_identifiers': 'rcsb_chem_comp_container_identifiers',
        'rcsb_chem_comp_descriptor': 'rcsb_chem_comp_descriptor',
        'rcsb_chem_comp_info': 'rcsb_chem_comp_info',
        'rcsb_chem_comp_related': 'rcsb_chem_comp_related',
        'rcsb_chem_comp_synonyms': 'rcsb_chem_comp_synonyms',
        'rcsb_chem_comp_target': 'rcsb_chem_comp_target',
        'rcsb_schema_container_identifiers': 'rcsb_schema_container_identifiers',
        'rcsb_id': 'rcsb_id'
    }

    def __init__(self, chem_comp=None, pdbx_chem_comp_audit=None, pdbx_chem_comp_descriptor=None, pdbx_chem_comp_feature=None, pdbx_chem_comp_identifier=None, pdbx_family_prd_audit=None, pdbx_prd_audit=None, pdbx_reference_entity_list=None, pdbx_reference_entity_poly=None, pdbx_reference_entity_poly_link=None, pdbx_reference_entity_poly_seq=None, pdbx_reference_entity_sequence=None, pdbx_reference_entity_src_nat=None, pdbx_reference_molecule=None, pdbx_reference_molecule_annotation=None, pdbx_reference_molecule_details=None, pdbx_reference_molecule_family=None, pdbx_reference_molecule_features=None, pdbx_reference_molecule_list=None, pdbx_reference_molecule_related_structures=None, pdbx_reference_molecule_synonyms=None, rcsb_bird_citation=None, rcsb_chem_comp_annotation=None, rcsb_chem_comp_container_identifiers=None, rcsb_chem_comp_descriptor=None, rcsb_chem_comp_info=None, rcsb_chem_comp_related=None, rcsb_chem_comp_synonyms=None, rcsb_chem_comp_target=None, rcsb_schema_container_identifiers=None, rcsb_id=None):  # noqa: E501
        """CoreChemComp - a model defined in Swagger"""  # noqa: E501
        self._chem_comp = None
        self._pdbx_chem_comp_audit = None
        self._pdbx_chem_comp_descriptor = None
        self._pdbx_chem_comp_feature = None
        self._pdbx_chem_comp_identifier = None
        self._pdbx_family_prd_audit = None
        self._pdbx_prd_audit = None
        self._pdbx_reference_entity_list = None
        self._pdbx_reference_entity_poly = None
        self._pdbx_reference_entity_poly_link = None
        self._pdbx_reference_entity_poly_seq = None
        self._pdbx_reference_entity_sequence = None
        self._pdbx_reference_entity_src_nat = None
        self._pdbx_reference_molecule = None
        self._pdbx_reference_molecule_annotation = None
        self._pdbx_reference_molecule_details = None
        self._pdbx_reference_molecule_family = None
        self._pdbx_reference_molecule_features = None
        self._pdbx_reference_molecule_list = None
        self._pdbx_reference_molecule_related_structures = None
        self._pdbx_reference_molecule_synonyms = None
        self._rcsb_bird_citation = None
        self._rcsb_chem_comp_annotation = None
        self._rcsb_chem_comp_container_identifiers = None
        self._rcsb_chem_comp_descriptor = None
        self._rcsb_chem_comp_info = None
        self._rcsb_chem_comp_related = None
        self._rcsb_chem_comp_synonyms = None
        self._rcsb_chem_comp_target = None
        self._rcsb_schema_container_identifiers = None
        self._rcsb_id = None
        self.discriminator = None
        if chem_comp is not None:
            self.chem_comp = chem_comp
        if pdbx_chem_comp_audit is not None:
            self.pdbx_chem_comp_audit = pdbx_chem_comp_audit
        if pdbx_chem_comp_descriptor is not None:
            self.pdbx_chem_comp_descriptor = pdbx_chem_comp_descriptor
        if pdbx_chem_comp_feature is not None:
            self.pdbx_chem_comp_feature = pdbx_chem_comp_feature
        if pdbx_chem_comp_identifier is not None:
            self.pdbx_chem_comp_identifier = pdbx_chem_comp_identifier
        if pdbx_family_prd_audit is not None:
            self.pdbx_family_prd_audit = pdbx_family_prd_audit
        if pdbx_prd_audit is not None:
            self.pdbx_prd_audit = pdbx_prd_audit
        if pdbx_reference_entity_list is not None:
            self.pdbx_reference_entity_list = pdbx_reference_entity_list
        if pdbx_reference_entity_poly is not None:
            self.pdbx_reference_entity_poly = pdbx_reference_entity_poly
        if pdbx_reference_entity_poly_link is not None:
            self.pdbx_reference_entity_poly_link = pdbx_reference_entity_poly_link
        if pdbx_reference_entity_poly_seq is not None:
            self.pdbx_reference_entity_poly_seq = pdbx_reference_entity_poly_seq
        if pdbx_reference_entity_sequence is not None:
            self.pdbx_reference_entity_sequence = pdbx_reference_entity_sequence
        if pdbx_reference_entity_src_nat is not None:
            self.pdbx_reference_entity_src_nat = pdbx_reference_entity_src_nat
        if pdbx_reference_molecule is not None:
            self.pdbx_reference_molecule = pdbx_reference_molecule
        if pdbx_reference_molecule_annotation is not None:
            self.pdbx_reference_molecule_annotation = pdbx_reference_molecule_annotation
        if pdbx_reference_molecule_details is not None:
            self.pdbx_reference_molecule_details = pdbx_reference_molecule_details
        if pdbx_reference_molecule_family is not None:
            self.pdbx_reference_molecule_family = pdbx_reference_molecule_family
        if pdbx_reference_molecule_features is not None:
            self.pdbx_reference_molecule_features = pdbx_reference_molecule_features
        if pdbx_reference_molecule_list is not None:
            self.pdbx_reference_molecule_list = pdbx_reference_molecule_list
        if pdbx_reference_molecule_related_structures is not None:
            self.pdbx_reference_molecule_related_structures = pdbx_reference_molecule_related_structures
        if pdbx_reference_molecule_synonyms is not None:
            self.pdbx_reference_molecule_synonyms = pdbx_reference_molecule_synonyms
        if rcsb_bird_citation is not None:
            self.rcsb_bird_citation = rcsb_bird_citation
        if rcsb_chem_comp_annotation is not None:
            self.rcsb_chem_comp_annotation = rcsb_chem_comp_annotation
        if rcsb_chem_comp_container_identifiers is not None:
            self.rcsb_chem_comp_container_identifiers = rcsb_chem_comp_container_identifiers
        if rcsb_chem_comp_descriptor is not None:
            self.rcsb_chem_comp_descriptor = rcsb_chem_comp_descriptor
        if rcsb_chem_comp_info is not None:
            self.rcsb_chem_comp_info = rcsb_chem_comp_info
        if rcsb_chem_comp_related is not None:
            self.rcsb_chem_comp_related = rcsb_chem_comp_related
        if rcsb_chem_comp_synonyms is not None:
            self.rcsb_chem_comp_synonyms = rcsb_chem_comp_synonyms
        if rcsb_chem_comp_target is not None:
            self.rcsb_chem_comp_target = rcsb_chem_comp_target
        if rcsb_schema_container_identifiers is not None:
            self.rcsb_schema_container_identifiers = rcsb_schema_container_identifiers
        self.rcsb_id = rcsb_id

    @property
    def chem_comp(self):
        """Gets the chem_comp of this CoreChemComp.  # noqa: E501


        :return: The chem_comp of this CoreChemComp.  # noqa: E501
        :rtype: ChemComp
        """
        return self._chem_comp

    @chem_comp.setter
    def chem_comp(self, chem_comp):
        """Sets the chem_comp of this CoreChemComp.


        :param chem_comp: The chem_comp of this CoreChemComp.  # noqa: E501
        :type: ChemComp
        """

        self._chem_comp = chem_comp

    @property
    def pdbx_chem_comp_audit(self):
        """Gets the pdbx_chem_comp_audit of this CoreChemComp.  # noqa: E501


        :return: The pdbx_chem_comp_audit of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxChemCompAudit]
        """
        return self._pdbx_chem_comp_audit

    @pdbx_chem_comp_audit.setter
    def pdbx_chem_comp_audit(self, pdbx_chem_comp_audit):
        """Sets the pdbx_chem_comp_audit of this CoreChemComp.


        :param pdbx_chem_comp_audit: The pdbx_chem_comp_audit of this CoreChemComp.  # noqa: E501
        :type: list[PdbxChemCompAudit]
        """

        self._pdbx_chem_comp_audit = pdbx_chem_comp_audit

    @property
    def pdbx_chem_comp_descriptor(self):
        """Gets the pdbx_chem_comp_descriptor of this CoreChemComp.  # noqa: E501


        :return: The pdbx_chem_comp_descriptor of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxChemCompDescriptor]
        """
        return self._pdbx_chem_comp_descriptor

    @pdbx_chem_comp_descriptor.setter
    def pdbx_chem_comp_descriptor(self, pdbx_chem_comp_descriptor):
        """Sets the pdbx_chem_comp_descriptor of this CoreChemComp.


        :param pdbx_chem_comp_descriptor: The pdbx_chem_comp_descriptor of this CoreChemComp.  # noqa: E501
        :type: list[PdbxChemCompDescriptor]
        """

        self._pdbx_chem_comp_descriptor = pdbx_chem_comp_descriptor

    @property
    def pdbx_chem_comp_feature(self):
        """Gets the pdbx_chem_comp_feature of this CoreChemComp.  # noqa: E501


        :return: The pdbx_chem_comp_feature of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxChemCompFeature]
        """
        return self._pdbx_chem_comp_feature

    @pdbx_chem_comp_feature.setter
    def pdbx_chem_comp_feature(self, pdbx_chem_comp_feature):
        """Sets the pdbx_chem_comp_feature of this CoreChemComp.


        :param pdbx_chem_comp_feature: The pdbx_chem_comp_feature of this CoreChemComp.  # noqa: E501
        :type: list[PdbxChemCompFeature]
        """

        self._pdbx_chem_comp_feature = pdbx_chem_comp_feature

    @property
    def pdbx_chem_comp_identifier(self):
        """Gets the pdbx_chem_comp_identifier of this CoreChemComp.  # noqa: E501


        :return: The pdbx_chem_comp_identifier of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxChemCompIdentifier]
        """
        return self._pdbx_chem_comp_identifier

    @pdbx_chem_comp_identifier.setter
    def pdbx_chem_comp_identifier(self, pdbx_chem_comp_identifier):
        """Sets the pdbx_chem_comp_identifier of this CoreChemComp.


        :param pdbx_chem_comp_identifier: The pdbx_chem_comp_identifier of this CoreChemComp.  # noqa: E501
        :type: list[PdbxChemCompIdentifier]
        """

        self._pdbx_chem_comp_identifier = pdbx_chem_comp_identifier

    @property
    def pdbx_family_prd_audit(self):
        """Gets the pdbx_family_prd_audit of this CoreChemComp.  # noqa: E501


        :return: The pdbx_family_prd_audit of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxFamilyPrdAudit]
        """
        return self._pdbx_family_prd_audit

    @pdbx_family_prd_audit.setter
    def pdbx_family_prd_audit(self, pdbx_family_prd_audit):
        """Sets the pdbx_family_prd_audit of this CoreChemComp.


        :param pdbx_family_prd_audit: The pdbx_family_prd_audit of this CoreChemComp.  # noqa: E501
        :type: list[PdbxFamilyPrdAudit]
        """

        self._pdbx_family_prd_audit = pdbx_family_prd_audit

    @property
    def pdbx_prd_audit(self):
        """Gets the pdbx_prd_audit of this CoreChemComp.  # noqa: E501


        :return: The pdbx_prd_audit of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxPrdAudit]
        """
        return self._pdbx_prd_audit

    @pdbx_prd_audit.setter
    def pdbx_prd_audit(self, pdbx_prd_audit):
        """Sets the pdbx_prd_audit of this CoreChemComp.


        :param pdbx_prd_audit: The pdbx_prd_audit of this CoreChemComp.  # noqa: E501
        :type: list[PdbxPrdAudit]
        """

        self._pdbx_prd_audit = pdbx_prd_audit

    @property
    def pdbx_reference_entity_list(self):
        """Gets the pdbx_reference_entity_list of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_list of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntityList]
        """
        return self._pdbx_reference_entity_list

    @pdbx_reference_entity_list.setter
    def pdbx_reference_entity_list(self, pdbx_reference_entity_list):
        """Sets the pdbx_reference_entity_list of this CoreChemComp.


        :param pdbx_reference_entity_list: The pdbx_reference_entity_list of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntityList]
        """

        self._pdbx_reference_entity_list = pdbx_reference_entity_list

    @property
    def pdbx_reference_entity_poly(self):
        """Gets the pdbx_reference_entity_poly of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_poly of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntityPoly]
        """
        return self._pdbx_reference_entity_poly

    @pdbx_reference_entity_poly.setter
    def pdbx_reference_entity_poly(self, pdbx_reference_entity_poly):
        """Sets the pdbx_reference_entity_poly of this CoreChemComp.


        :param pdbx_reference_entity_poly: The pdbx_reference_entity_poly of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntityPoly]
        """

        self._pdbx_reference_entity_poly = pdbx_reference_entity_poly

    @property
    def pdbx_reference_entity_poly_link(self):
        """Gets the pdbx_reference_entity_poly_link of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_poly_link of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntityPolyLink]
        """
        return self._pdbx_reference_entity_poly_link

    @pdbx_reference_entity_poly_link.setter
    def pdbx_reference_entity_poly_link(self, pdbx_reference_entity_poly_link):
        """Sets the pdbx_reference_entity_poly_link of this CoreChemComp.


        :param pdbx_reference_entity_poly_link: The pdbx_reference_entity_poly_link of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntityPolyLink]
        """

        self._pdbx_reference_entity_poly_link = pdbx_reference_entity_poly_link

    @property
    def pdbx_reference_entity_poly_seq(self):
        """Gets the pdbx_reference_entity_poly_seq of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_poly_seq of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntityPolySeq]
        """
        return self._pdbx_reference_entity_poly_seq

    @pdbx_reference_entity_poly_seq.setter
    def pdbx_reference_entity_poly_seq(self, pdbx_reference_entity_poly_seq):
        """Sets the pdbx_reference_entity_poly_seq of this CoreChemComp.


        :param pdbx_reference_entity_poly_seq: The pdbx_reference_entity_poly_seq of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntityPolySeq]
        """

        self._pdbx_reference_entity_poly_seq = pdbx_reference_entity_poly_seq

    @property
    def pdbx_reference_entity_sequence(self):
        """Gets the pdbx_reference_entity_sequence of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_sequence of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntitySequence]
        """
        return self._pdbx_reference_entity_sequence

    @pdbx_reference_entity_sequence.setter
    def pdbx_reference_entity_sequence(self, pdbx_reference_entity_sequence):
        """Sets the pdbx_reference_entity_sequence of this CoreChemComp.


        :param pdbx_reference_entity_sequence: The pdbx_reference_entity_sequence of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntitySequence]
        """

        self._pdbx_reference_entity_sequence = pdbx_reference_entity_sequence

    @property
    def pdbx_reference_entity_src_nat(self):
        """Gets the pdbx_reference_entity_src_nat of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_entity_src_nat of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceEntitySrcNat]
        """
        return self._pdbx_reference_entity_src_nat

    @pdbx_reference_entity_src_nat.setter
    def pdbx_reference_entity_src_nat(self, pdbx_reference_entity_src_nat):
        """Sets the pdbx_reference_entity_src_nat of this CoreChemComp.


        :param pdbx_reference_entity_src_nat: The pdbx_reference_entity_src_nat of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceEntitySrcNat]
        """

        self._pdbx_reference_entity_src_nat = pdbx_reference_entity_src_nat

    @property
    def pdbx_reference_molecule(self):
        """Gets the pdbx_reference_molecule of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule of this CoreChemComp.  # noqa: E501
        :rtype: PdbxReferenceMolecule
        """
        return self._pdbx_reference_molecule

    @pdbx_reference_molecule.setter
    def pdbx_reference_molecule(self, pdbx_reference_molecule):
        """Sets the pdbx_reference_molecule of this CoreChemComp.


        :param pdbx_reference_molecule: The pdbx_reference_molecule of this CoreChemComp.  # noqa: E501
        :type: PdbxReferenceMolecule
        """

        self._pdbx_reference_molecule = pdbx_reference_molecule

    @property
    def pdbx_reference_molecule_annotation(self):
        """Gets the pdbx_reference_molecule_annotation of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_annotation of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeAnnotation]
        """
        return self._pdbx_reference_molecule_annotation

    @pdbx_reference_molecule_annotation.setter
    def pdbx_reference_molecule_annotation(self, pdbx_reference_molecule_annotation):
        """Sets the pdbx_reference_molecule_annotation of this CoreChemComp.


        :param pdbx_reference_molecule_annotation: The pdbx_reference_molecule_annotation of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeAnnotation]
        """

        self._pdbx_reference_molecule_annotation = pdbx_reference_molecule_annotation

    @property
    def pdbx_reference_molecule_details(self):
        """Gets the pdbx_reference_molecule_details of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_details of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeDetails]
        """
        return self._pdbx_reference_molecule_details

    @pdbx_reference_molecule_details.setter
    def pdbx_reference_molecule_details(self, pdbx_reference_molecule_details):
        """Sets the pdbx_reference_molecule_details of this CoreChemComp.


        :param pdbx_reference_molecule_details: The pdbx_reference_molecule_details of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeDetails]
        """

        self._pdbx_reference_molecule_details = pdbx_reference_molecule_details

    @property
    def pdbx_reference_molecule_family(self):
        """Gets the pdbx_reference_molecule_family of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_family of this CoreChemComp.  # noqa: E501
        :rtype: PdbxReferenceMoleculeFamily
        """
        return self._pdbx_reference_molecule_family

    @pdbx_reference_molecule_family.setter
    def pdbx_reference_molecule_family(self, pdbx_reference_molecule_family):
        """Sets the pdbx_reference_molecule_family of this CoreChemComp.


        :param pdbx_reference_molecule_family: The pdbx_reference_molecule_family of this CoreChemComp.  # noqa: E501
        :type: PdbxReferenceMoleculeFamily
        """

        self._pdbx_reference_molecule_family = pdbx_reference_molecule_family

    @property
    def pdbx_reference_molecule_features(self):
        """Gets the pdbx_reference_molecule_features of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_features of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeFeatures]
        """
        return self._pdbx_reference_molecule_features

    @pdbx_reference_molecule_features.setter
    def pdbx_reference_molecule_features(self, pdbx_reference_molecule_features):
        """Sets the pdbx_reference_molecule_features of this CoreChemComp.


        :param pdbx_reference_molecule_features: The pdbx_reference_molecule_features of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeFeatures]
        """

        self._pdbx_reference_molecule_features = pdbx_reference_molecule_features

    @property
    def pdbx_reference_molecule_list(self):
        """Gets the pdbx_reference_molecule_list of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_list of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeList]
        """
        return self._pdbx_reference_molecule_list

    @pdbx_reference_molecule_list.setter
    def pdbx_reference_molecule_list(self, pdbx_reference_molecule_list):
        """Sets the pdbx_reference_molecule_list of this CoreChemComp.


        :param pdbx_reference_molecule_list: The pdbx_reference_molecule_list of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeList]
        """

        self._pdbx_reference_molecule_list = pdbx_reference_molecule_list

    @property
    def pdbx_reference_molecule_related_structures(self):
        """Gets the pdbx_reference_molecule_related_structures of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_related_structures of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeRelatedStructures]
        """
        return self._pdbx_reference_molecule_related_structures

    @pdbx_reference_molecule_related_structures.setter
    def pdbx_reference_molecule_related_structures(self, pdbx_reference_molecule_related_structures):
        """Sets the pdbx_reference_molecule_related_structures of this CoreChemComp.


        :param pdbx_reference_molecule_related_structures: The pdbx_reference_molecule_related_structures of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeRelatedStructures]
        """

        self._pdbx_reference_molecule_related_structures = pdbx_reference_molecule_related_structures

    @property
    def pdbx_reference_molecule_synonyms(self):
        """Gets the pdbx_reference_molecule_synonyms of this CoreChemComp.  # noqa: E501


        :return: The pdbx_reference_molecule_synonyms of this CoreChemComp.  # noqa: E501
        :rtype: list[PdbxReferenceMoleculeSynonyms]
        """
        return self._pdbx_reference_molecule_synonyms

    @pdbx_reference_molecule_synonyms.setter
    def pdbx_reference_molecule_synonyms(self, pdbx_reference_molecule_synonyms):
        """Sets the pdbx_reference_molecule_synonyms of this CoreChemComp.


        :param pdbx_reference_molecule_synonyms: The pdbx_reference_molecule_synonyms of this CoreChemComp.  # noqa: E501
        :type: list[PdbxReferenceMoleculeSynonyms]
        """

        self._pdbx_reference_molecule_synonyms = pdbx_reference_molecule_synonyms

    @property
    def rcsb_bird_citation(self):
        """Gets the rcsb_bird_citation of this CoreChemComp.  # noqa: E501


        :return: The rcsb_bird_citation of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbBirdCitation]
        """
        return self._rcsb_bird_citation

    @rcsb_bird_citation.setter
    def rcsb_bird_citation(self, rcsb_bird_citation):
        """Sets the rcsb_bird_citation of this CoreChemComp.


        :param rcsb_bird_citation: The rcsb_bird_citation of this CoreChemComp.  # noqa: E501
        :type: list[RcsbBirdCitation]
        """

        self._rcsb_bird_citation = rcsb_bird_citation

    @property
    def rcsb_chem_comp_annotation(self):
        """Gets the rcsb_chem_comp_annotation of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_annotation of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbChemCompAnnotation]
        """
        return self._rcsb_chem_comp_annotation

    @rcsb_chem_comp_annotation.setter
    def rcsb_chem_comp_annotation(self, rcsb_chem_comp_annotation):
        """Sets the rcsb_chem_comp_annotation of this CoreChemComp.


        :param rcsb_chem_comp_annotation: The rcsb_chem_comp_annotation of this CoreChemComp.  # noqa: E501
        :type: list[RcsbChemCompAnnotation]
        """

        self._rcsb_chem_comp_annotation = rcsb_chem_comp_annotation

    @property
    def rcsb_chem_comp_container_identifiers(self):
        """Gets the rcsb_chem_comp_container_identifiers of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_container_identifiers of this CoreChemComp.  # noqa: E501
        :rtype: RcsbChemCompContainerIdentifiers
        """
        return self._rcsb_chem_comp_container_identifiers

    @rcsb_chem_comp_container_identifiers.setter
    def rcsb_chem_comp_container_identifiers(self, rcsb_chem_comp_container_identifiers):
        """Sets the rcsb_chem_comp_container_identifiers of this CoreChemComp.


        :param rcsb_chem_comp_container_identifiers: The rcsb_chem_comp_container_identifiers of this CoreChemComp.  # noqa: E501
        :type: RcsbChemCompContainerIdentifiers
        """

        self._rcsb_chem_comp_container_identifiers = rcsb_chem_comp_container_identifiers

    @property
    def rcsb_chem_comp_descriptor(self):
        """Gets the rcsb_chem_comp_descriptor of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_descriptor of this CoreChemComp.  # noqa: E501
        :rtype: RcsbChemCompDescriptor
        """
        return self._rcsb_chem_comp_descriptor

    @rcsb_chem_comp_descriptor.setter
    def rcsb_chem_comp_descriptor(self, rcsb_chem_comp_descriptor):
        """Sets the rcsb_chem_comp_descriptor of this CoreChemComp.


        :param rcsb_chem_comp_descriptor: The rcsb_chem_comp_descriptor of this CoreChemComp.  # noqa: E501
        :type: RcsbChemCompDescriptor
        """

        self._rcsb_chem_comp_descriptor = rcsb_chem_comp_descriptor

    @property
    def rcsb_chem_comp_info(self):
        """Gets the rcsb_chem_comp_info of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_info of this CoreChemComp.  # noqa: E501
        :rtype: RcsbChemCompInfo
        """
        return self._rcsb_chem_comp_info

    @rcsb_chem_comp_info.setter
    def rcsb_chem_comp_info(self, rcsb_chem_comp_info):
        """Sets the rcsb_chem_comp_info of this CoreChemComp.


        :param rcsb_chem_comp_info: The rcsb_chem_comp_info of this CoreChemComp.  # noqa: E501
        :type: RcsbChemCompInfo
        """

        self._rcsb_chem_comp_info = rcsb_chem_comp_info

    @property
    def rcsb_chem_comp_related(self):
        """Gets the rcsb_chem_comp_related of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_related of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbChemCompRelated]
        """
        return self._rcsb_chem_comp_related

    @rcsb_chem_comp_related.setter
    def rcsb_chem_comp_related(self, rcsb_chem_comp_related):
        """Sets the rcsb_chem_comp_related of this CoreChemComp.


        :param rcsb_chem_comp_related: The rcsb_chem_comp_related of this CoreChemComp.  # noqa: E501
        :type: list[RcsbChemCompRelated]
        """

        self._rcsb_chem_comp_related = rcsb_chem_comp_related

    @property
    def rcsb_chem_comp_synonyms(self):
        """Gets the rcsb_chem_comp_synonyms of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_synonyms of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbChemCompSynonyms]
        """
        return self._rcsb_chem_comp_synonyms

    @rcsb_chem_comp_synonyms.setter
    def rcsb_chem_comp_synonyms(self, rcsb_chem_comp_synonyms):
        """Sets the rcsb_chem_comp_synonyms of this CoreChemComp.


        :param rcsb_chem_comp_synonyms: The rcsb_chem_comp_synonyms of this CoreChemComp.  # noqa: E501
        :type: list[RcsbChemCompSynonyms]
        """

        self._rcsb_chem_comp_synonyms = rcsb_chem_comp_synonyms

    @property
    def rcsb_chem_comp_target(self):
        """Gets the rcsb_chem_comp_target of this CoreChemComp.  # noqa: E501


        :return: The rcsb_chem_comp_target of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbChemCompTarget]
        """
        return self._rcsb_chem_comp_target

    @rcsb_chem_comp_target.setter
    def rcsb_chem_comp_target(self, rcsb_chem_comp_target):
        """Sets the rcsb_chem_comp_target of this CoreChemComp.


        :param rcsb_chem_comp_target: The rcsb_chem_comp_target of this CoreChemComp.  # noqa: E501
        :type: list[RcsbChemCompTarget]
        """

        self._rcsb_chem_comp_target = rcsb_chem_comp_target

    @property
    def rcsb_schema_container_identifiers(self):
        """Gets the rcsb_schema_container_identifiers of this CoreChemComp.  # noqa: E501


        :return: The rcsb_schema_container_identifiers of this CoreChemComp.  # noqa: E501
        :rtype: list[RcsbSchemaContainerIdentifiers]
        """
        return self._rcsb_schema_container_identifiers

    @rcsb_schema_container_identifiers.setter
    def rcsb_schema_container_identifiers(self, rcsb_schema_container_identifiers):
        """Sets the rcsb_schema_container_identifiers of this CoreChemComp.


        :param rcsb_schema_container_identifiers: The rcsb_schema_container_identifiers of this CoreChemComp.  # noqa: E501
        :type: list[RcsbSchemaContainerIdentifiers]
        """

        self._rcsb_schema_container_identifiers = rcsb_schema_container_identifiers

    @property
    def rcsb_id(self):
        """Gets the rcsb_id of this CoreChemComp.  # noqa: E501

        A unique identifier for the chemical definition in this container.  # noqa: E501

        :return: The rcsb_id of this CoreChemComp.  # noqa: E501
        :rtype: str
        """
        return self._rcsb_id

    @rcsb_id.setter
    def rcsb_id(self, rcsb_id):
        """Sets the rcsb_id of this CoreChemComp.

        A unique identifier for the chemical definition in this container.  # noqa: E501

        :param rcsb_id: The rcsb_id of this CoreChemComp.  # noqa: E501
        :type: str
        """
        if rcsb_id is None:
            raise ValueError("Invalid value for `rcsb_id`, must not be `None`")  # noqa: E501

        self._rcsb_id = rcsb_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CoreChemComp, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CoreChemComp):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
