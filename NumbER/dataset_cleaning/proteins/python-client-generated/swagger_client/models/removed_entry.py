# coding: utf-8

"""
    RCSB RESTful API

    Provides programmatic access to information and annotations stored in the Protein Data Bank. <br>Models are generated from JSON schema version: <b>1.40.0</b>. <br>API services deployed on: Sun, 2 Apr 2023 21:44:46 -0700  # noqa: E501

    OpenAPI spec version: 1.40.0
    Contact: info@rcsb.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RemovedEntry(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'rcsb_repository_holdings_insilico_models': 'RcsbRepositoryHoldingsInsilicoModels',
        'rcsb_repository_holdings_removed': 'RcsbRepositoryHoldingsRemoved',
        'rcsb_repository_holdings_removed_audit_author': 'list[RcsbRepositoryHoldingsRemovedAuditAuthor]',
        'rcsb_repository_holdings_removed_entry_container_identifiers': 'RcsbRepositoryHoldingsRemovedEntryContainerIdentifiers',
        'rcsb_repository_holdings_superseded': 'RcsbRepositoryHoldingsSuperseded',
        'rcsb_repository_holdings_transferred': 'RcsbRepositoryHoldingsTransferred',
        'rcsb_id': 'str'
    }

    attribute_map = {
        'rcsb_repository_holdings_insilico_models': 'rcsb_repository_holdings_insilico_models',
        'rcsb_repository_holdings_removed': 'rcsb_repository_holdings_removed',
        'rcsb_repository_holdings_removed_audit_author': 'rcsb_repository_holdings_removed_audit_author',
        'rcsb_repository_holdings_removed_entry_container_identifiers': 'rcsb_repository_holdings_removed_entry_container_identifiers',
        'rcsb_repository_holdings_superseded': 'rcsb_repository_holdings_superseded',
        'rcsb_repository_holdings_transferred': 'rcsb_repository_holdings_transferred',
        'rcsb_id': 'rcsb_id'
    }

    def __init__(self, rcsb_repository_holdings_insilico_models=None, rcsb_repository_holdings_removed=None, rcsb_repository_holdings_removed_audit_author=None, rcsb_repository_holdings_removed_entry_container_identifiers=None, rcsb_repository_holdings_superseded=None, rcsb_repository_holdings_transferred=None, rcsb_id=None):  # noqa: E501
        """RemovedEntry - a model defined in Swagger"""  # noqa: E501
        self._rcsb_repository_holdings_insilico_models = None
        self._rcsb_repository_holdings_removed = None
        self._rcsb_repository_holdings_removed_audit_author = None
        self._rcsb_repository_holdings_removed_entry_container_identifiers = None
        self._rcsb_repository_holdings_superseded = None
        self._rcsb_repository_holdings_transferred = None
        self._rcsb_id = None
        self.discriminator = None
        if rcsb_repository_holdings_insilico_models is not None:
            self.rcsb_repository_holdings_insilico_models = rcsb_repository_holdings_insilico_models
        if rcsb_repository_holdings_removed is not None:
            self.rcsb_repository_holdings_removed = rcsb_repository_holdings_removed
        if rcsb_repository_holdings_removed_audit_author is not None:
            self.rcsb_repository_holdings_removed_audit_author = rcsb_repository_holdings_removed_audit_author
        if rcsb_repository_holdings_removed_entry_container_identifiers is not None:
            self.rcsb_repository_holdings_removed_entry_container_identifiers = rcsb_repository_holdings_removed_entry_container_identifiers
        if rcsb_repository_holdings_superseded is not None:
            self.rcsb_repository_holdings_superseded = rcsb_repository_holdings_superseded
        if rcsb_repository_holdings_transferred is not None:
            self.rcsb_repository_holdings_transferred = rcsb_repository_holdings_transferred
        self.rcsb_id = rcsb_id

    @property
    def rcsb_repository_holdings_insilico_models(self):
        """Gets the rcsb_repository_holdings_insilico_models of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_insilico_models of this RemovedEntry.  # noqa: E501
        :rtype: RcsbRepositoryHoldingsInsilicoModels
        """
        return self._rcsb_repository_holdings_insilico_models

    @rcsb_repository_holdings_insilico_models.setter
    def rcsb_repository_holdings_insilico_models(self, rcsb_repository_holdings_insilico_models):
        """Sets the rcsb_repository_holdings_insilico_models of this RemovedEntry.


        :param rcsb_repository_holdings_insilico_models: The rcsb_repository_holdings_insilico_models of this RemovedEntry.  # noqa: E501
        :type: RcsbRepositoryHoldingsInsilicoModels
        """

        self._rcsb_repository_holdings_insilico_models = rcsb_repository_holdings_insilico_models

    @property
    def rcsb_repository_holdings_removed(self):
        """Gets the rcsb_repository_holdings_removed of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_removed of this RemovedEntry.  # noqa: E501
        :rtype: RcsbRepositoryHoldingsRemoved
        """
        return self._rcsb_repository_holdings_removed

    @rcsb_repository_holdings_removed.setter
    def rcsb_repository_holdings_removed(self, rcsb_repository_holdings_removed):
        """Sets the rcsb_repository_holdings_removed of this RemovedEntry.


        :param rcsb_repository_holdings_removed: The rcsb_repository_holdings_removed of this RemovedEntry.  # noqa: E501
        :type: RcsbRepositoryHoldingsRemoved
        """

        self._rcsb_repository_holdings_removed = rcsb_repository_holdings_removed

    @property
    def rcsb_repository_holdings_removed_audit_author(self):
        """Gets the rcsb_repository_holdings_removed_audit_author of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_removed_audit_author of this RemovedEntry.  # noqa: E501
        :rtype: list[RcsbRepositoryHoldingsRemovedAuditAuthor]
        """
        return self._rcsb_repository_holdings_removed_audit_author

    @rcsb_repository_holdings_removed_audit_author.setter
    def rcsb_repository_holdings_removed_audit_author(self, rcsb_repository_holdings_removed_audit_author):
        """Sets the rcsb_repository_holdings_removed_audit_author of this RemovedEntry.


        :param rcsb_repository_holdings_removed_audit_author: The rcsb_repository_holdings_removed_audit_author of this RemovedEntry.  # noqa: E501
        :type: list[RcsbRepositoryHoldingsRemovedAuditAuthor]
        """

        self._rcsb_repository_holdings_removed_audit_author = rcsb_repository_holdings_removed_audit_author

    @property
    def rcsb_repository_holdings_removed_entry_container_identifiers(self):
        """Gets the rcsb_repository_holdings_removed_entry_container_identifiers of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_removed_entry_container_identifiers of this RemovedEntry.  # noqa: E501
        :rtype: RcsbRepositoryHoldingsRemovedEntryContainerIdentifiers
        """
        return self._rcsb_repository_holdings_removed_entry_container_identifiers

    @rcsb_repository_holdings_removed_entry_container_identifiers.setter
    def rcsb_repository_holdings_removed_entry_container_identifiers(self, rcsb_repository_holdings_removed_entry_container_identifiers):
        """Sets the rcsb_repository_holdings_removed_entry_container_identifiers of this RemovedEntry.


        :param rcsb_repository_holdings_removed_entry_container_identifiers: The rcsb_repository_holdings_removed_entry_container_identifiers of this RemovedEntry.  # noqa: E501
        :type: RcsbRepositoryHoldingsRemovedEntryContainerIdentifiers
        """

        self._rcsb_repository_holdings_removed_entry_container_identifiers = rcsb_repository_holdings_removed_entry_container_identifiers

    @property
    def rcsb_repository_holdings_superseded(self):
        """Gets the rcsb_repository_holdings_superseded of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_superseded of this RemovedEntry.  # noqa: E501
        :rtype: RcsbRepositoryHoldingsSuperseded
        """
        return self._rcsb_repository_holdings_superseded

    @rcsb_repository_holdings_superseded.setter
    def rcsb_repository_holdings_superseded(self, rcsb_repository_holdings_superseded):
        """Sets the rcsb_repository_holdings_superseded of this RemovedEntry.


        :param rcsb_repository_holdings_superseded: The rcsb_repository_holdings_superseded of this RemovedEntry.  # noqa: E501
        :type: RcsbRepositoryHoldingsSuperseded
        """

        self._rcsb_repository_holdings_superseded = rcsb_repository_holdings_superseded

    @property
    def rcsb_repository_holdings_transferred(self):
        """Gets the rcsb_repository_holdings_transferred of this RemovedEntry.  # noqa: E501


        :return: The rcsb_repository_holdings_transferred of this RemovedEntry.  # noqa: E501
        :rtype: RcsbRepositoryHoldingsTransferred
        """
        return self._rcsb_repository_holdings_transferred

    @rcsb_repository_holdings_transferred.setter
    def rcsb_repository_holdings_transferred(self, rcsb_repository_holdings_transferred):
        """Sets the rcsb_repository_holdings_transferred of this RemovedEntry.


        :param rcsb_repository_holdings_transferred: The rcsb_repository_holdings_transferred of this RemovedEntry.  # noqa: E501
        :type: RcsbRepositoryHoldingsTransferred
        """

        self._rcsb_repository_holdings_transferred = rcsb_repository_holdings_transferred

    @property
    def rcsb_id(self):
        """Gets the rcsb_id of this RemovedEntry.  # noqa: E501

        The RCSB entry identifier.  # noqa: E501

        :return: The rcsb_id of this RemovedEntry.  # noqa: E501
        :rtype: str
        """
        return self._rcsb_id

    @rcsb_id.setter
    def rcsb_id(self, rcsb_id):
        """Sets the rcsb_id of this RemovedEntry.

        The RCSB entry identifier.  # noqa: E501

        :param rcsb_id: The rcsb_id of this RemovedEntry.  # noqa: E501
        :type: str
        """
        if rcsb_id is None:
            raise ValueError("Invalid value for `rcsb_id`, must not be `None`")  # noqa: E501

        self._rcsb_id = rcsb_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RemovedEntry, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RemovedEntry):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
