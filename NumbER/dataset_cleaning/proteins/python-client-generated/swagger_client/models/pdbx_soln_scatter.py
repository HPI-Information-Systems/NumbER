# coding: utf-8

"""
    RCSB RESTful API

    Provides programmatic access to information and annotations stored in the Protein Data Bank. <br>Models are generated from JSON schema version: <b>1.40.0</b>. <br>API services deployed on: Sun, 2 Apr 2023 21:44:46 -0700  # noqa: E501

    OpenAPI spec version: 1.40.0
    Contact: info@rcsb.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PdbxSolnScatter(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'buffer_name': 'str',
        'concentration_range': 'str',
        'data_analysis_software_list': 'str',
        'data_reduction_software_list': 'str',
        'detector_specific': 'str',
        'detector_type': 'str',
        'id': 'str',
        'max_mean_cross_sectional_radii_gyration': 'float',
        'max_mean_cross_sectional_radii_gyration_esd': 'float',
        'mean_guiner_radius': 'float',
        'mean_guiner_radius_esd': 'float',
        'min_mean_cross_sectional_radii_gyration': 'float',
        'min_mean_cross_sectional_radii_gyration_esd': 'float',
        'num_time_frames': 'int',
        'protein_length': 'str',
        'sample_p_h': 'float',
        'source_beamline': 'str',
        'source_beamline_instrument': 'str',
        'source_class': 'str',
        'source_type': 'str',
        'temperature': 'float',
        'type': 'str'
    }

    attribute_map = {
        'buffer_name': 'buffer_name',
        'concentration_range': 'concentration_range',
        'data_analysis_software_list': 'data_analysis_software_list',
        'data_reduction_software_list': 'data_reduction_software_list',
        'detector_specific': 'detector_specific',
        'detector_type': 'detector_type',
        'id': 'id',
        'max_mean_cross_sectional_radii_gyration': 'max_mean_cross_sectional_radii_gyration',
        'max_mean_cross_sectional_radii_gyration_esd': 'max_mean_cross_sectional_radii_gyration_esd',
        'mean_guiner_radius': 'mean_guiner_radius',
        'mean_guiner_radius_esd': 'mean_guiner_radius_esd',
        'min_mean_cross_sectional_radii_gyration': 'min_mean_cross_sectional_radii_gyration',
        'min_mean_cross_sectional_radii_gyration_esd': 'min_mean_cross_sectional_radii_gyration_esd',
        'num_time_frames': 'num_time_frames',
        'protein_length': 'protein_length',
        'sample_p_h': 'sample_pH',
        'source_beamline': 'source_beamline',
        'source_beamline_instrument': 'source_beamline_instrument',
        'source_class': 'source_class',
        'source_type': 'source_type',
        'temperature': 'temperature',
        'type': 'type'
    }

    def __init__(self, buffer_name=None, concentration_range=None, data_analysis_software_list=None, data_reduction_software_list=None, detector_specific=None, detector_type=None, id=None, max_mean_cross_sectional_radii_gyration=None, max_mean_cross_sectional_radii_gyration_esd=None, mean_guiner_radius=None, mean_guiner_radius_esd=None, min_mean_cross_sectional_radii_gyration=None, min_mean_cross_sectional_radii_gyration_esd=None, num_time_frames=None, protein_length=None, sample_p_h=None, source_beamline=None, source_beamline_instrument=None, source_class=None, source_type=None, temperature=None, type=None):  # noqa: E501
        """PdbxSolnScatter - a model defined in Swagger"""  # noqa: E501
        self._buffer_name = None
        self._concentration_range = None
        self._data_analysis_software_list = None
        self._data_reduction_software_list = None
        self._detector_specific = None
        self._detector_type = None
        self._id = None
        self._max_mean_cross_sectional_radii_gyration = None
        self._max_mean_cross_sectional_radii_gyration_esd = None
        self._mean_guiner_radius = None
        self._mean_guiner_radius_esd = None
        self._min_mean_cross_sectional_radii_gyration = None
        self._min_mean_cross_sectional_radii_gyration_esd = None
        self._num_time_frames = None
        self._protein_length = None
        self._sample_p_h = None
        self._source_beamline = None
        self._source_beamline_instrument = None
        self._source_class = None
        self._source_type = None
        self._temperature = None
        self._type = None
        self.discriminator = None
        if buffer_name is not None:
            self.buffer_name = buffer_name
        if concentration_range is not None:
            self.concentration_range = concentration_range
        if data_analysis_software_list is not None:
            self.data_analysis_software_list = data_analysis_software_list
        if data_reduction_software_list is not None:
            self.data_reduction_software_list = data_reduction_software_list
        if detector_specific is not None:
            self.detector_specific = detector_specific
        if detector_type is not None:
            self.detector_type = detector_type
        self.id = id
        if max_mean_cross_sectional_radii_gyration is not None:
            self.max_mean_cross_sectional_radii_gyration = max_mean_cross_sectional_radii_gyration
        if max_mean_cross_sectional_radii_gyration_esd is not None:
            self.max_mean_cross_sectional_radii_gyration_esd = max_mean_cross_sectional_radii_gyration_esd
        if mean_guiner_radius is not None:
            self.mean_guiner_radius = mean_guiner_radius
        if mean_guiner_radius_esd is not None:
            self.mean_guiner_radius_esd = mean_guiner_radius_esd
        if min_mean_cross_sectional_radii_gyration is not None:
            self.min_mean_cross_sectional_radii_gyration = min_mean_cross_sectional_radii_gyration
        if min_mean_cross_sectional_radii_gyration_esd is not None:
            self.min_mean_cross_sectional_radii_gyration_esd = min_mean_cross_sectional_radii_gyration_esd
        if num_time_frames is not None:
            self.num_time_frames = num_time_frames
        if protein_length is not None:
            self.protein_length = protein_length
        if sample_p_h is not None:
            self.sample_p_h = sample_p_h
        if source_beamline is not None:
            self.source_beamline = source_beamline
        if source_beamline_instrument is not None:
            self.source_beamline_instrument = source_beamline_instrument
        if source_class is not None:
            self.source_class = source_class
        if source_type is not None:
            self.source_type = source_type
        if temperature is not None:
            self.temperature = temperature
        if type is not None:
            self.type = type

    @property
    def buffer_name(self):
        """Gets the buffer_name of this PdbxSolnScatter.  # noqa: E501

        The name of the buffer used for the sample in the solution scattering  experiment.  # noqa: E501

        :return: The buffer_name of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._buffer_name

    @buffer_name.setter
    def buffer_name(self, buffer_name):
        """Sets the buffer_name of this PdbxSolnScatter.

        The name of the buffer used for the sample in the solution scattering  experiment.  # noqa: E501

        :param buffer_name: The buffer_name of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._buffer_name = buffer_name

    @property
    def concentration_range(self):
        """Gets the concentration_range of this PdbxSolnScatter.  # noqa: E501

        The concentration range (mg/mL) of the complex in the  sample used in the solution scattering experiment to  determine the mean radius of structural elongation.  # noqa: E501

        :return: The concentration_range of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._concentration_range

    @concentration_range.setter
    def concentration_range(self, concentration_range):
        """Sets the concentration_range of this PdbxSolnScatter.

        The concentration range (mg/mL) of the complex in the  sample used in the solution scattering experiment to  determine the mean radius of structural elongation.  # noqa: E501

        :param concentration_range: The concentration_range of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._concentration_range = concentration_range

    @property
    def data_analysis_software_list(self):
        """Gets the data_analysis_software_list of this PdbxSolnScatter.  # noqa: E501

        A list of the software used in the data analysis  # noqa: E501

        :return: The data_analysis_software_list of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._data_analysis_software_list

    @data_analysis_software_list.setter
    def data_analysis_software_list(self, data_analysis_software_list):
        """Sets the data_analysis_software_list of this PdbxSolnScatter.

        A list of the software used in the data analysis  # noqa: E501

        :param data_analysis_software_list: The data_analysis_software_list of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._data_analysis_software_list = data_analysis_software_list

    @property
    def data_reduction_software_list(self):
        """Gets the data_reduction_software_list of this PdbxSolnScatter.  # noqa: E501

        A list of the software used in the data reduction  # noqa: E501

        :return: The data_reduction_software_list of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._data_reduction_software_list

    @data_reduction_software_list.setter
    def data_reduction_software_list(self, data_reduction_software_list):
        """Sets the data_reduction_software_list of this PdbxSolnScatter.

        A list of the software used in the data reduction  # noqa: E501

        :param data_reduction_software_list: The data_reduction_software_list of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._data_reduction_software_list = data_reduction_software_list

    @property
    def detector_specific(self):
        """Gets the detector_specific of this PdbxSolnScatter.  # noqa: E501

        The particular radiation detector. In general this will be a   manufacturer, description, model number or some combination of   these.  # noqa: E501

        :return: The detector_specific of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._detector_specific

    @detector_specific.setter
    def detector_specific(self, detector_specific):
        """Sets the detector_specific of this PdbxSolnScatter.

        The particular radiation detector. In general this will be a   manufacturer, description, model number or some combination of   these.  # noqa: E501

        :param detector_specific: The detector_specific of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._detector_specific = detector_specific

    @property
    def detector_type(self):
        """Gets the detector_type of this PdbxSolnScatter.  # noqa: E501

        The general class of the radiation detector.  # noqa: E501

        :return: The detector_type of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._detector_type

    @detector_type.setter
    def detector_type(self, detector_type):
        """Sets the detector_type of this PdbxSolnScatter.

        The general class of the radiation detector.  # noqa: E501

        :param detector_type: The detector_type of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._detector_type = detector_type

    @property
    def id(self):
        """Gets the id of this PdbxSolnScatter.  # noqa: E501

        The value of _pdbx_soln_scatter.id must  uniquely identify the sample in the category PDBX_SOLN_SCATTER  # noqa: E501

        :return: The id of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PdbxSolnScatter.

        The value of _pdbx_soln_scatter.id must  uniquely identify the sample in the category PDBX_SOLN_SCATTER  # noqa: E501

        :param id: The id of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def max_mean_cross_sectional_radii_gyration(self):
        """Gets the max_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501

        The maximum mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q give the R_G and the forward scattering at  zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see:      O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.      O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The max_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._max_mean_cross_sectional_radii_gyration

    @max_mean_cross_sectional_radii_gyration.setter
    def max_mean_cross_sectional_radii_gyration(self, max_mean_cross_sectional_radii_gyration):
        """Sets the max_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.

        The maximum mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q give the R_G and the forward scattering at  zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see:      O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.      O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param max_mean_cross_sectional_radii_gyration: The max_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._max_mean_cross_sectional_radii_gyration = max_mean_cross_sectional_radii_gyration

    @property
    def max_mean_cross_sectional_radii_gyration_esd(self):
        """Gets the max_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501

        The estimated standard deviation for the minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The max_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._max_mean_cross_sectional_radii_gyration_esd

    @max_mean_cross_sectional_radii_gyration_esd.setter
    def max_mean_cross_sectional_radii_gyration_esd(self, max_mean_cross_sectional_radii_gyration_esd):
        """Sets the max_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.

        The estimated standard deviation for the minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param max_mean_cross_sectional_radii_gyration_esd: The max_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._max_mean_cross_sectional_radii_gyration_esd = max_mean_cross_sectional_radii_gyration_esd

    @property
    def mean_guiner_radius(self):
        """Gets the mean_guiner_radius of this PdbxSolnScatter.  # noqa: E501

        The mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q gives the R_G and the forward scattering at  zero angle I(0).       lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see: O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.       O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.        G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from      ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The mean_guiner_radius of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._mean_guiner_radius

    @mean_guiner_radius.setter
    def mean_guiner_radius(self, mean_guiner_radius):
        """Sets the mean_guiner_radius of this PdbxSolnScatter.

        The mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q gives the R_G and the forward scattering at  zero angle I(0).       lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see: O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.       O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.        G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from      ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param mean_guiner_radius: The mean_guiner_radius of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._mean_guiner_radius = mean_guiner_radius

    @property
    def mean_guiner_radius_esd(self):
        """Gets the mean_guiner_radius_esd of this PdbxSolnScatter.  # noqa: E501

        The estimated standard deviation for the  mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q give the R_G and the forward scattering at  zero angle I(0).       lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see:      O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.      O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The mean_guiner_radius_esd of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._mean_guiner_radius_esd

    @mean_guiner_radius_esd.setter
    def mean_guiner_radius_esd(self, mean_guiner_radius_esd):
        """Sets the mean_guiner_radius_esd of this PdbxSolnScatter.

        The estimated standard deviation for the  mean radius of structural elongation of the sample.  In a given solute-solvent contrast, the radius of gyration  R_G is a measure of structural elongation if the internal  inhomogeneity of scattering densities has no effect. Guiner  analysis at low Q give the R_G and the forward scattering at  zero angle I(0).       lnl(Q) = lnl(0) - R_G^2Q^2/3   where        Q = 4(pi)sin(theta/lamda)        2theta = scattering angle        lamda = wavelength   The above expression is valid in a QR_G range for extended  rod-like particles. The relative I(0)/c values ( where   c = sample concentration) for sample measurements in a  constant buffer for a single sample data session, gives the  relative masses of the protein(s) studied when referenced  against a standard.   see:      O.Glatter & O.Kratky, (1982). Editors of \"Small angle       X-ray Scattering, Academic Press, New York.      O.Kratky. (1963). X-ray small angle scattering with       substances of biological interest in diluted solutions.       Prog. Biophys. Chem., 13, 105-173.      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation       of X-ray and neutron scatter from rigid rods of non-uniform       cross section and finite length. J.Appl. Crystallog., 18, 452-460.   If the structure is elongated, the mean radius of gyration  of the cross-sectional structure R_XS  and the mean cross sectional  intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param mean_guiner_radius_esd: The mean_guiner_radius_esd of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._mean_guiner_radius_esd = mean_guiner_radius_esd

    @property
    def min_mean_cross_sectional_radii_gyration(self):
        """Gets the min_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501

        The minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The min_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._min_mean_cross_sectional_radii_gyration

    @min_mean_cross_sectional_radii_gyration.setter
    def min_mean_cross_sectional_radii_gyration(self, min_mean_cross_sectional_radii_gyration):
        """Sets the min_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.

        The minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).      lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param min_mean_cross_sectional_radii_gyration: The min_mean_cross_sectional_radii_gyration of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._min_mean_cross_sectional_radii_gyration = min_mean_cross_sectional_radii_gyration

    @property
    def min_mean_cross_sectional_radii_gyration_esd(self):
        """Gets the min_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501

        The estimated standard deviation for the minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).     lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :return: The min_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._min_mean_cross_sectional_radii_gyration_esd

    @min_mean_cross_sectional_radii_gyration_esd.setter
    def min_mean_cross_sectional_radii_gyration_esd(self, min_mean_cross_sectional_radii_gyration_esd):
        """Sets the min_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.

        The estimated standard deviation for the minimum mean radius of structural elongation of the sample. In a given solute-solvent contrast, the radius of gyration R_G is a measure of structural elongation if the internal inhomogeneity of scattering densities has no effect. Guiner analysis at low Q give the R_G and the forward scattering at zero angle I(0).     lnl(Q) = lnl(0) - R_G^2Q^2/3  where       Q = 4(pi)sin(theta/lamda)       2theta = scattering angle       lamda = wavelength  The above expression is valid in a QR_G range for extended rod-like particles. The relative I(0)/c values ( where  c = sample concentration) for sample measurements in a constant buffer for a single sample data session, gives the relative masses of the protein(s) studied when referenced against a standard.  see:     O.Glatter & O.Kratky, (1982). Editors of \"Small angle      X-ray Scattering, Academic Press, New York.     O.Kratky. (1963). X-ray small angle scattering with      substances of biological interest in diluted solutions.      Prog. Biophys. Chem., 13, 105-173.     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation      of X-ray and neutron scatter from rigid rods of non-uniform      cross section and finite length. J.Appl. Crystallog., 18, 452-460.  If the structure is elongated, the mean radius of gyration of the cross-sectional structure R_XS  and the mean cross sectional intensity at zero angle [I(Q).Q]_Q->0 is obtained from     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2  # noqa: E501

        :param min_mean_cross_sectional_radii_gyration_esd: The min_mean_cross_sectional_radii_gyration_esd of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._min_mean_cross_sectional_radii_gyration_esd = min_mean_cross_sectional_radii_gyration_esd

    @property
    def num_time_frames(self):
        """Gets the num_time_frames of this PdbxSolnScatter.  # noqa: E501

        The number of time frame solution scattering images used.  # noqa: E501

        :return: The num_time_frames of this PdbxSolnScatter.  # noqa: E501
        :rtype: int
        """
        return self._num_time_frames

    @num_time_frames.setter
    def num_time_frames(self, num_time_frames):
        """Sets the num_time_frames of this PdbxSolnScatter.

        The number of time frame solution scattering images used.  # noqa: E501

        :param num_time_frames: The num_time_frames of this PdbxSolnScatter.  # noqa: E501
        :type: int
        """

        self._num_time_frames = num_time_frames

    @property
    def protein_length(self):
        """Gets the protein_length of this PdbxSolnScatter.  # noqa: E501

        The length (or range) of the protein sample under study. If the solution structure is approximated as an elongated elliptical cyclinder the length L is determined from,    L = sqrt [12( (R_G)^2  -  (R_XS)^2 ) ]  The length should also be given by    L = pi I(0) / [ I(Q).Q]_Q->0  # noqa: E501

        :return: The protein_length of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._protein_length

    @protein_length.setter
    def protein_length(self, protein_length):
        """Sets the protein_length of this PdbxSolnScatter.

        The length (or range) of the protein sample under study. If the solution structure is approximated as an elongated elliptical cyclinder the length L is determined from,    L = sqrt [12( (R_G)^2  -  (R_XS)^2 ) ]  The length should also be given by    L = pi I(0) / [ I(Q).Q]_Q->0  # noqa: E501

        :param protein_length: The protein_length of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._protein_length = protein_length

    @property
    def sample_p_h(self):
        """Gets the sample_p_h of this PdbxSolnScatter.  # noqa: E501

        The pH value of the buffered sample.  # noqa: E501

        :return: The sample_p_h of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._sample_p_h

    @sample_p_h.setter
    def sample_p_h(self, sample_p_h):
        """Sets the sample_p_h of this PdbxSolnScatter.

        The pH value of the buffered sample.  # noqa: E501

        :param sample_p_h: The sample_p_h of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._sample_p_h = sample_p_h

    @property
    def source_beamline(self):
        """Gets the source_beamline of this PdbxSolnScatter.  # noqa: E501

        The beamline name used for the experiment  # noqa: E501

        :return: The source_beamline of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._source_beamline

    @source_beamline.setter
    def source_beamline(self, source_beamline):
        """Sets the source_beamline of this PdbxSolnScatter.

        The beamline name used for the experiment  # noqa: E501

        :param source_beamline: The source_beamline of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._source_beamline = source_beamline

    @property
    def source_beamline_instrument(self):
        """Gets the source_beamline_instrument of this PdbxSolnScatter.  # noqa: E501

        The instrumentation used on the beamline  # noqa: E501

        :return: The source_beamline_instrument of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._source_beamline_instrument

    @source_beamline_instrument.setter
    def source_beamline_instrument(self, source_beamline_instrument):
        """Sets the source_beamline_instrument of this PdbxSolnScatter.

        The instrumentation used on the beamline  # noqa: E501

        :param source_beamline_instrument: The source_beamline_instrument of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._source_beamline_instrument = source_beamline_instrument

    @property
    def source_class(self):
        """Gets the source_class of this PdbxSolnScatter.  # noqa: E501

        The general class of the radiation source.  # noqa: E501

        :return: The source_class of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._source_class

    @source_class.setter
    def source_class(self, source_class):
        """Sets the source_class of this PdbxSolnScatter.

        The general class of the radiation source.  # noqa: E501

        :param source_class: The source_class of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._source_class = source_class

    @property
    def source_type(self):
        """Gets the source_type of this PdbxSolnScatter.  # noqa: E501

        The make, model, name or beamline of the source of radiation.  # noqa: E501

        :return: The source_type of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this PdbxSolnScatter.

        The make, model, name or beamline of the source of radiation.  # noqa: E501

        :param source_type: The source_type of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """

        self._source_type = source_type

    @property
    def temperature(self):
        """Gets the temperature of this PdbxSolnScatter.  # noqa: E501

        The temperature in kelvins at which the experiment  was conducted  # noqa: E501

        :return: The temperature of this PdbxSolnScatter.  # noqa: E501
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this PdbxSolnScatter.

        The temperature in kelvins at which the experiment  was conducted  # noqa: E501

        :param temperature: The temperature of this PdbxSolnScatter.  # noqa: E501
        :type: float
        """

        self._temperature = temperature

    @property
    def type(self):
        """Gets the type of this PdbxSolnScatter.  # noqa: E501

        The type of solution scattering experiment carried out  # noqa: E501

        :return: The type of this PdbxSolnScatter.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PdbxSolnScatter.

        The type of solution scattering experiment carried out  # noqa: E501

        :param type: The type of this PdbxSolnScatter.  # noqa: E501
        :type: str
        """
        allowed_values = ["modelling", "neutron", "x-ray"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PdbxSolnScatter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PdbxSolnScatter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
